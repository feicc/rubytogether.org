#!/usr/bin/env ruby
require "time"
require "bundler/setup"
require "active_support"
require "active_support/time"
require "active_support/core_ext/string/inflections"
require "active_support/core_ext/array/conversions"
require "how_is"
include ActiveSupport::NumberHelper

PROJECTS = %w[
  bundler/bundler
  rubygems/rubygems.org
  rubygems/rubygems
  bundler/gemstash
]


posts = Pathname.new("../app/views/news").expand_path(__dir__).children

last_update = posts.map(&:basename).map(&:to_s).grep(/monthly-update/).sort.last
last_pattern = /(\d{4}-\d{2}-\d{2})(?:-[-\w]+)-(\w+?)-(\d{4})/
last_published, last_month, last_year = last_update.match(last_pattern).to_a[1..-1]

last_published = Date.parse(last_published)
last_month_date = Date.parse("#{last_month} #{last_year}")
update_date = last_month_date.advance(months: 1)
update_month = update_date.strftime("%B")
update_year = update_date.strftime("%Y")

def pluralize(word, count)
  [number_to_delimited(count.to_i), word.pluralize(count)].join(" ")
end

def link_list(data)
  data.map do |name, link|
    link.nil? ? name : "[#{name}](#{link})"
  end.to_sentence
end

def commits_link_for(repo, date)
  "https://github.com/" << repo << "/compare/master@%7B" <<
    date.advance(months: -1).iso8601 << "%7D...master@%7B" <<
    date.iso8601 << "%7D"
end

def git_contributions(repo, date)
  @contributions ||= {}
  @contributions[repo] ||= {}

  user, repo = repo.split("/")
  @contributions[repo][date] ||= HowIs::Contributions.new(user: user, repo: repo, start_date: date)
end

# See also,
# https://github.com/how-is/how_is/blob/master/lib/how_is/contributions.rb#L129-L144
def git_summary(repo, date)
  contributions = git_contributions(repo, date)
  contributions.summary(start_text: "This month")
end

# Returns a list of names of new contributors.
def git_new_contributors(repo, date)
  contributions = git_contributions

  contributions.new_contributors.map { |c| c["name"] }
end

def render(b, path)
  require "erb"
  update_template_path = Pathname.new("../lib/templates/monthly_update.md.erb").expand_path(__dir__)
  update_template = update_template_path.read
  erb = ERB.new(update_template, nil, "<>>-")
  erb.location = update_template_path.to_s
  File.write path, erb.result(b)
end

# TODO: we should get this list from the database, including all Sapphire companies
# and then randomly choosing 2-4 companies from the next level down each month.
candidate_companies = {
  "Cloud City" => "http://cloudcity.io",
  "Bleacher Report" => "http://www.bleacherreport.com/",
  "Basecamp" => "https://basecamp.com/",
  "Digital Ocean" => "http://digitalocean.com/",
  "Gitlab" => "http://gitlab.com/",
  "Travis CI" => "https://travis-ci.org/",
  "Icelab" => "http://icelab.com.au/",
  "thoughtbot" => "https://thoughtbot.com/",
}.to_a.sample(4).to_h
top_companies = { "Stripe" => "http://stripe.com/" }
top_companies.merge! candidate_companies
top_companies.merge!("many others" => nil)

# TODO: we can get all of this data the same way that the bin/since script does.
new_developer_count = 1
new_developers = [
  "Josh Justice"
]
new_company_count = 0
new_companies = {
}
company_count = 79
individual_count = 109
friend_count = 72

# TODO: we can get this information from the financial_automation repo.
income = 43114.34
spent  = 25303.55
hours_paid = 142.7
budget_bullets = <<-END.gsub(/^  /, '').strip
* $9109 for 60.7 hours worked on Bundler at $150/hour
* $8396 for 56.0 hours worked on RubyGems.org at $150/hour
* $900 for 6.0 hours worked on RubyGems at $150/hour
* $3000 for 20.0 hours worked on other OSS and devtools at $150/hour
* $76.11 on dedicated servers for RubyBench.org
* $639.2 on payment processing fees
* $2339.5 on company overhead like hosting, services, software, hardware, taxes, etc
* $470.0 on accounting, copywriting, design, and other professional services
* $373.74 on marketing, evangelism, and community outreach
END

# TODO: this part probably needs a human to write it. Should we have
# the script prompt the human for input, or should we drop them into
# an editor with the rest of the update already filled out?
brief_summary = <<-END.gsub(/^  /, '').strip

END
ruby_together_summary = <<-END.gsub(/^  /, '').strip

END
bundler_summary = <<-END.gsub(/^  /, '').strip

END
rubygems_summary = <<-END.gsub(/^  /, '').strip

END
rubygems_org_summary = <<-END.gsub(/^  /, '').strip

END
gemstash_summary = <<-END.gsub(/^  /, '').strip

END

new_update_name = "#{update_month}-#{update_year}-monthly-update".downcase
new_update_path = Pathname.new("../app/views/news/#{Date.today.iso8601}-#{new_update_name}.html.md").expand_path(__dir__)
render(binding, new_update_path)
puts "Created new update at #{new_update_path}"
